{"ast":null,"code":"var _jsxFileName = \"/home/sundus/Development/code/Phase-2/Wk2-Code-Challenge/bot-battlr/src/component/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  //start here with your code for step one\n  const [botCol, setBotCol] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\").then(res => res.json()).then(data => setBotCol(data));\n  }, []);\n  // console.log(botCol)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      botArmy: botArmy,\n      setBotArmy: setBotArmy,\n      setBotCol: setBotCol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: isActive,\n      setIsActive: setIsActive,\n      setBotArmy: setBotArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(BotCollection, {\n      setBotArmy: setBotArmy,\n      botCol: botCol,\n      botArmy: botArmy,\n      setIsActive: setIsActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"y0wzuOMiMb9ZOtMGV9IcGGKFp24=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotSpecs","BotsPage","botCol","setBotCol","botArmy","setBotArmy","isActive","setIsActive","fetch","then","res","json","data"],"sources":["/home/sundus/Development/code/Phase-2/Wk2-Code-Challenge/bot-battlr/src/component/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n  const [botCol, setBotCol] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\")\n      .then((res) => res.json())\n      .then((data) => setBotCol(data));\n  }, []);\n  // console.log(botCol)\n  return (\n    <div>\n      <YourBotArmy botArmy={botArmy} setBotArmy={setBotArmy} setBotCol={setBotCol} />\n      {isActive ? (<BotSpecs bot={isActive} setIsActive={setIsActive} setBotArmy={setBotArmy}/>): \n      (\n        <BotCollection setBotArmy={setBotArmy} botCol={botCol} botArmy={botArmy} setIsActive={setIsActive} />\n      )}\n    </div>\n  );\n}\n\nexport default BotsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,SAASC,QAAQ,GAAG;EAAA;EAClB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKT,SAAS,CAACS,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EACN;EACA,oBACE;IAAA,wBACE,QAAC,WAAW;MAAC,OAAO,EAAER,OAAQ;MAAC,UAAU,EAAEC,UAAW;MAAC,SAAS,EAAEF;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9EG,QAAQ,gBAAI,QAAC,QAAQ;MAAC,GAAG,EAAEA,QAAS;MAAC,WAAW,EAAEC,WAAY;MAAC,UAAU,EAAEF;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,gBAEvF,QAAC,aAAa;MAAC,UAAU,EAAEA,UAAW;MAAC,MAAM,EAAEH,MAAO;MAAC,OAAO,EAAEE,OAAQ;MAAC,WAAW,EAAEG;IAAY;MAAA;MAAA;MAAA;IAAA,QACnG;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GArBQN,QAAQ;AAAA,KAARA,QAAQ;AAuBjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}